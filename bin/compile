#!/bin/bash

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}

indent() {
  sed -u 's/^/       /'
}

message() {
  echo "-----> $*"
}

# Use the default rust channel. Users can change this by writing a
# `rust-toolchain` file in their BUILD_DIR.
CHANNEL=stable

# Load our toolchain configuration, if any was specified.
if [ -f "$BUILD_DIR/rust-toolchain" ]; then
    CHANNEL="$(cat "$BUILD_DIR/rust-toolchain")"
fi

# Our rustup installation.
export RUSTUP_HOME="$CACHE_DIR/rustup"

# Our cargo installation.  We implicitly trust Rustup and Cargo
# to do the right thing when new versions are released.
export CARGO_HOME="$CACHE_DIR/cargo"

# Include binaries installed by cargo and rustup in our path.
export PATH="$CARGO_HOME/bin:$PATH"

message "using rust-toolchain channel $CHANNEL"

# Switch to our cache directory.
cd "$CACHE_DIR"

# Make sure we have an appropriate Rust toolchain installed.
if [ -d "$CARGO_HOME" ]; then
    message "Checking for new releases of Rust $CHANNEL channel"
    # It's possible that $CHANNEL has changed, or the `stable` channel has updated.
    rustup self update
    rustup update "$CHANNEL"
    rustup default "$CHANNEL"
    message "Adding wasm32-unknown-unknown target"
    rustup target add wasm32-unknown-unknown --toolchain "$CHANNEL"
else
    message "Downloading rustup"
    curl https://sh.rustup.rs -sSf > rustup.sh
    chmod u+x rustup.sh
    message "Using rustup to install Rust channel $CHANNEL"
    ./rustup.sh -y --default-toolchain "$CHANNEL" --target wasm32-unknown-unknown
    rm rustup.sh
fi

if [ ! -x "$CARGO_HOME/bin/rustc" ]; then
    echo "failed: Cannot find Rust binaries at $CARGO_HOME"
    exit 1
fi

# This is where we will cache our Rust output.  Note the suggestions at
# https://github.com/alexcrichton/cargo/commit/014765f788ca1c2476936835ca32cc2746f99b42
# which describe how this needs to be named.
export CARGO_TARGET_DIR="$CACHE_DIR/target"

# install wasmtime
mkdir $HOME/bin
curl -sSL https://github.com/bytecodealliance/wasmtime/releases/download/v0.19.0/wasmtime-v0.19.0-x86_64-linux.tar.xz -o wasmtime-v0.19.0-x86_64-linux.tar.xz
tar -xf wasmtime-v0.19.0-x86_64-linux.tar.xz
mv wasmtime-v0.19.0-x86_64-linux/wasmtime $HOME/bin/wasmtime
rm -rf wasmtime-*

# add wasmtime to $PATH
mkdir $BUILD_DIR/.profile.d
echo 'PATH=$PATH:$HOME/bin' > $BUILD_DIR/.profile.d/wasm.sh

# Build the project
message "Building application using Cargo"
cd $BUILD_DIR
cargo build --release --target wasm32-unknown-unknown
